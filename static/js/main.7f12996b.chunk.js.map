{"version":3,"sources":["components/NavBar.js","components/SortNode.js","components/SortList.js","components/ListContext.js","components/helpers.js","components/Header.js","components/InsertionSort.js","components/BubbleSort.js","components/SelectionSort.js","components/MergeSort.js","components/QuickSort.js","components/Home.js","App.js","index.js"],"names":["NavBar","className","to","SortNode","length","color","style","width","height","marginTop","alignSelf","backgroundColor","marginRight","display","textAlign","justifyContent","SortList","renderedList","list","map","node","value","margin","flexDirection","background","paddingLeft","boxShadow","borderRadius","paddingBottom","ListContext","createContext","generateList","A","i","push","Math","floor","random","sleep","ms","Promise","r","setTimeout","Header","sort","isSorted","canRandomize","setIsSorted","useContext","listProperties","setList","type","disabled","onClick","for","name","max","min","step","onChange","e","size","target","InsertionSort","useState","setCanRandomize","useEffect","insertionSort","a","window","location","hash","key","j","position","left","top","BubbleSort","bubbleSort","temp","SelectionSort","selectionSort","MergeSort","previousOrder","merge","right","arr","shift","concat","slice","mergeSort","mid","prevIndex","indexOf","l","m","splice","QuickSort","listSize","setListSize","partition","low","high","pivot","quickSort","h","console","log","randomize","Home","App","Provider","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f12996b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../styles/NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <NavLink to=\"/insertion\">Insertion</NavLink>\r\n            <NavLink to=\"/bubble\">Bubble</NavLink>\r\n            <NavLink to=\"/selection\">Selection</NavLink>\r\n            <NavLink to=\"/merge\">Merge</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst SortNode = ({ length, color }) => {\r\n    const style = {\r\n        // position: 'absolute',\r\n        // offset: 'bottom',\r\n        width: '100%',\r\n        height: `${6 * length}px`,\r\n        marginTop: '65px',\r\n        alignSelf: 'flex-end',\r\n        backgroundColor: color,\r\n        marginRight: '5px',\r\n        color: 'black',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n    const style1 = {\r\n        alignSelf: 'flex-end',\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            <span style={style1}>{length}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortNode\r\n","import React from 'react'\r\nimport SortNode from './SortNode'\r\n\r\nconst SortList = ({ list }) => {\r\n    const renderedList = list.map((node) => (\r\n        <SortNode length={node.value} color={node.color} />\r\n    ))\r\n\r\n    const style = {\r\n        display: 'flex',\r\n        width: '90%',\r\n        height: '50rem',\r\n        margin: 'auto',\r\n        flexDirection: 'rows',\r\n        background: '#e6e6e6',\r\n        paddingLeft: '5px',\r\n        marginTop: '50px',\r\n        boxShadow: '5px 10px 18px #888888',\r\n        borderRadius: '10px',\r\n        paddingBottom: '5px',\r\n    }\r\n    // const style1 = { height: '50%' }\r\n    return (\r\n        <div style={style} className=\"list-container\">\r\n            {renderedList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortList\r\n","import { createContext } from 'react'\r\n\r\nconst ListContext = createContext({})\r\n\r\nexport default ListContext\r\n","const generateList = (length) => {\r\n    let A = []\r\n    for (let i = 0; i < length; i++) {\r\n        A.push({\r\n            value: Math.floor(Math.random() * 101),\r\n            color: 'white',\r\n        })\r\n    }\r\n    return A\r\n}\r\n\r\nconst sleep = (ms) => {\r\n    return new Promise((r) => setTimeout(r, ms))\r\n}\r\nexport { generateList, sleep }\r\n","import React, { useContext } from 'react'\r\nimport ListContext from './ListContext'\r\nimport { generateList } from './helpers'\r\nconst Header = ({ sort, isSorted, canRandomize, setIsSorted }) => {\r\n    const { listProperties, setList } = useContext(ListContext)\r\n    return (\r\n        <form>\r\n            <button\r\n                type=\"button\"\r\n                disabled={isSorted ? true : false}\r\n                onClick={sort}\r\n                style={{marginRight: '20px'}}>\r\n                {' '}\r\n                Sort!{' '}\r\n            </button>\r\n            <label for=\"size\">Size</label>\r\n            <input\r\n                name=\"size\"\r\n                type=\"range\"\r\n                max=\"50\"\r\n                min=\"5\"\r\n                // value=\"5\"\r\n                step=\"1\"\r\n                onChange={(e) =>\r\n                    setList({ ...listProperties, size: e.target.value })\r\n                }\r\n            />\r\n            <button\r\n                type=\"button\"\r\n                disabled={canRandomize ? false : true}\r\n                onClick={() => {\r\n\r\n                \r\n                    setList({\r\n                        list: generateList(listProperties.size),\r\n                        size: listProperties.size,\r\n                    })\r\n\r\n                    setIsSorted(false)\r\n\r\n                }\r\n                    \r\n                }>\r\n                Randomize {listProperties.size}-sized list{' '}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport SortList from './SortList.js'\r\nimport ListContext from './ListContext'\r\nimport Header from './Header'\r\nimport { generateList, sleep } from './helpers.js'\r\n\r\nconst InsertionSort = () => {\r\n    const { listProperties, setList } = useContext(ListContext)\r\n    const [isSorted, setIsSorted] = useState(false)\r\n    const [canRandomize, setCanRandomize] = useState(true)\r\n    // const [currentValue, setCurrentValue] = useState(listProperties.list[1])\r\n    // const [comparedValue, setComparedValue] = useState(listProperties.list[0])\r\n\r\n    useEffect(() => {\r\n        if(listProperties.list.length === 0){\r\n            setList({\r\n                list: generateList(listProperties.size),\r\n                size: 25,\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const insertionSort = async () => {\r\n        listProperties.list[0].color = '#9df2c6'\r\n        setIsSorted(true)\r\n        setCanRandomize(false)\r\n        setList({\r\n            ...listProperties,\r\n            list: [...listProperties.list],\r\n        })\r\n        await sleep(75)\r\n\r\n        let length = listProperties.list.length\r\n\r\n        for (let i = 1; i < length; i++) {\r\n            if(window.location.hash !== \"#/insertion\"){\r\n                setList({\r\n                    list: generateList(listProperties.size),\r\n                    size: 25,\r\n                })\r\n                return\r\n            }\r\n            let key = listProperties.list[i].value\r\n\r\n            // setCurrentValue(key)\r\n            let j = i - 1\r\n\r\n            while (j >= 0 && listProperties.list[j].value > key) {\r\n                // setComparedValue(listProperties.list[j].value)\r\n                listProperties.list[j + 1].value = listProperties.list[j].value\r\n\r\n                j = j - 1\r\n                setList({ list: [...listProperties.list], ...listProperties })\r\n                await sleep(75)\r\n            }\r\n            listProperties.list[j + 1].value = key\r\n            listProperties.list[i].color = '#9df2c6'\r\n            setList({ list: [...listProperties.list], ...listProperties })\r\n            await sleep(75)\r\n        }\r\n\r\n        setCanRandomize(true)\r\n    }\r\n\r\n    let style1 = {\r\n        position: 'absolute',\r\n        left: '7.5%',\r\n        top: '12%',\r\n    }\r\n\r\n    return (\r\n        <div className=\"insertion-sort\">\r\n            <Header\r\n                sort={insertionSort}\r\n                canRandomize={canRandomize}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n            />\r\n            <div style={style1} className=\"insertion-info\"></div>\r\n            <SortList list={listProperties.list} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InsertionSort\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport SortList from './SortList.js'\r\nimport Header from './Header'\r\nimport { generateList, sleep } from './helpers.js'\r\nimport ListContext from './ListContext'\r\n\r\nconst BubbleSort = () => {\r\n    const { listProperties, setList } = useContext(ListContext)\r\n    const [isSorted, setIsSorted] = useState(false)\r\n    const [canRandomize, setCanRandomize] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(listProperties.list.length === 0){\r\n            setList({\r\n                list: generateList(listProperties.size),\r\n                size: 25,\r\n            })\r\n        }\r\n\r\n    }, [])\r\n\r\n    const bubbleSort = async () => {\r\n        setIsSorted(true)\r\n        setCanRandomize(false)\r\n        const length = listProperties.list.length\r\n        for (let i = 1; i < length; i++) {\r\n            if(window.location.hash !== \"#/bubble\"){\r\n                setList({\r\n                    list: generateList(listProperties.size),\r\n                    size: 25,\r\n                })\r\n                return\r\n            }\r\n            for (let j = 0; j < length - 1; j++) {\r\n                if (\r\n                    listProperties.list[j].value >\r\n                    listProperties.list[j + 1].value\r\n                ) {\r\n                    let temp = listProperties.list[j].value\r\n                    listProperties.list[j].value =\r\n                        listProperties.list[j + 1].value\r\n                    listProperties.list[j + 1].value = temp\r\n\r\n                    listProperties.list[j].color = 'pink'\r\n                    listProperties.list[j + 1].color = 'pink'\r\n                    setList({\r\n                        ...listProperties,\r\n                        list: [...listProperties.list],\r\n                    })\r\n                    await sleep(50)\r\n\r\n                    listProperties.list[j].color = 'white'\r\n                    listProperties.list[j + 1].color = 'white'\r\n                    setList({\r\n                        ...listProperties,\r\n                        list: [...listProperties.list],\r\n                    })\r\n                }\r\n            }\r\n            listProperties.list[length - i].color = '#9df2c6'\r\n            setList({ ...listProperties, list: [...listProperties.list] })\r\n            await sleep(50)\r\n        }\r\n        listProperties.list[0].color = '#9df2c6'\r\n        setList({\r\n            ...listProperties,\r\n            list: [...listProperties.list],\r\n        })\r\n        setCanRandomize(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"bubble-sort\">\r\n            <Header\r\n                sort={bubbleSort}\r\n                canRandomize={canRandomize}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n            />\r\n            <div className=\"bubble-info\"></div>\r\n            <SortList list={listProperties.list} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BubbleSort\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport SortList from './SortList.js'\r\nimport Header from './Header'\r\nimport ListContext from './ListContext'\r\nimport { generateList, sleep } from './helpers.js'\r\n\r\nconst SelectionSort = () => {\r\n    const { listProperties, setList } = useContext(ListContext)\r\n    const [isSorted, setIsSorted] = useState(false)\r\n    const [canRandomize, setCanRandomize] = useState(true)\r\n    useEffect(() => {\r\n        if(listProperties.list.length === 0){\r\n            setList({\r\n                list: generateList(listProperties.size),\r\n                size: 25,\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const selectionSort = async () => {\r\n        const length = listProperties.list.length\r\n        setIsSorted(true)\r\n        setCanRandomize(false)\r\n        for (let i = 0; i < length - 1; i++) {\r\n            if(window.location.hash !== \"#/selection\"){\r\n                setList({\r\n                    list: generateList(listProperties.size),\r\n                    size: 25,\r\n                })\r\n                return\r\n            }\r\n            let min = i\r\n\r\n            listProperties.list[i].color = '#f2ca9d'\r\n            setList({\r\n                ...listProperties,\r\n                list: [...listProperties.list],\r\n            })\r\n            await sleep(10)\r\n\r\n            let j = i + 1\r\n            for (j; j < length; j++) {\r\n                if (j !== i + 1 && j - 1 !== min) {\r\n                    listProperties.list[j - 1].color = 'white'\r\n                }\r\n\r\n                listProperties.list[j].color = 'yellow'\r\n                setList({\r\n                    ...listProperties,\r\n                    list: [...listProperties.list],\r\n                })\r\n                await sleep(10)\r\n                if (\r\n                    listProperties.list[j].value <\r\n                    listProperties.list[min].value\r\n                ) {\r\n                    if (min !== i) {\r\n                        listProperties.list[min].color = 'white'\r\n                    }\r\n\r\n                    min = j\r\n                    listProperties.list[min].color = '#f2b066'\r\n                    setList({\r\n                        ...listProperties,\r\n                        list: [...listProperties.list],\r\n                    })\r\n                    await sleep(10)\r\n                }\r\n            }\r\n            listProperties.list[j - 1].color = 'white'\r\n            setList({\r\n                ...listProperties,\r\n                list: [...listProperties.list],\r\n            })\r\n            await sleep(10)\r\n\r\n            if (min !== i) {\r\n                let temp = listProperties.list[min].value\r\n                listProperties.list[min].value = listProperties.list[i].value\r\n                listProperties.list[i].value = temp\r\n                listProperties.list[min].color = 'pink'\r\n                listProperties.list[i].color = 'pink'\r\n                setList({\r\n                    ...listProperties,\r\n                    list: [...listProperties.list],\r\n                })\r\n                await sleep(10)\r\n            }\r\n            listProperties.list[min].color = 'white'\r\n            listProperties.list[i].color = '#9df2c6'\r\n            setList({\r\n                ...listProperties,\r\n                list: [...listProperties.list],\r\n            })\r\n            await sleep(10)\r\n        }\r\n        listProperties.list[length - 1].color = '#9df2c6'\r\n        setList({\r\n            ...listProperties,\r\n            list: [...listProperties.list],\r\n        })\r\n        await sleep(10)\r\n\r\n        setCanRandomize(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"selection-sort\">\r\n            <Header\r\n                sort={selectionSort}\r\n                canRandomize={canRandomize}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n            />\r\n\r\n            <div className=\"selection-info\"></div>\r\n            <SortList list={listProperties.list} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectionSort\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport SortList from './SortList.js'\r\nimport Header from './Header'\r\nimport ListContext from './ListContext'\r\nimport { generateList, sleep } from './helpers.js'\r\n\r\nconst MergeSort = () => {\r\n    const { listProperties, setList } = useContext(ListContext)\r\n    const [isSorted, setIsSorted] = useState(false)\r\n    const [canRandomize, setCanRandomize] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if(listProperties.list.length === 0){\r\n            setList({\r\n                list: generateList(listProperties.size),\r\n                size: 25,\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    let previousOrder = listProperties.list\r\n\r\n    const merge = async (left, right) => {\r\n        let arr = []\r\n        while (left.length && right.length) {\r\n            if (left[0].value < right[0].value) {\r\n                arr.push(left.shift())\r\n            } else {\r\n                arr.push(right.shift())\r\n            }\r\n        }\r\n\r\n        let j = arr.concat(left.slice().concat(right.slice()))\r\n\r\n        return j\r\n    }\r\n\r\n    const mergeSort = async (arr) => {\r\n        if (arr.length < 2) {\r\n            return arr\r\n        }\r\n\r\n        // if(window.location.href.slice(window.location.origin.length + 1) !== \"merge\"){\r\n        //     setList({\r\n        //         list: generateList(listProperties.size),\r\n        //         size: 25,\r\n        //     })\r\n        //     return\r\n        // }\r\n        let mid = Math.floor(arr.length / 2)\r\n        const left = arr.slice(0, mid)\r\n        const right = arr.slice(mid)\r\n\r\n        let prevIndex = listProperties.list.indexOf(left[0])\r\n\r\n        let l = await mergeSort(left)\r\n\r\n        let r = await mergeSort(right)\r\n\r\n        let m = await merge(l, r)\r\n\r\n        previousOrder.splice(prevIndex, m.length, ...m)\r\n\r\n\r\n        setList({\r\n            ...listProperties,\r\n            list: [...previousOrder],\r\n        })\r\n        await sleep((m.length / listProperties.list.length) * 2000)\r\n\r\n        return m\r\n    }\r\n\r\n    return (\r\n        <div className=\"merge-sort\">\r\n            <Header\r\n                sort={() => mergeSort(listProperties.list)}\r\n                canRandomize={canRandomize}\r\n                isSorted={isSorted}\r\n                setIsSorted={setIsSorted}\r\n            />\r\n            <div className=\"merge-info\"></div>\r\n            <SortList list={listProperties.list} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MergeSort\r\n","import React, { useState } from 'react'\r\nimport { generateList } from './helpers'\r\nimport SortList from './SortList'\r\nimport Header from './Header'\r\n\r\nconst QuickSort = () => {\r\n    const [list, setList] = useState(generateList(25))\r\n    const [listSize, setListSize] = useState(25)\r\n    const [isSorted, setIsSorted] = useState(false)\r\n    const [canRandomize, setCanRandomize] = useState(true)\r\n\r\n    const partition = async (arr, low, high) => {\r\n        let pivot = arr[low]\r\n        let l = low\r\n        let r = high\r\n\r\n        while (l < r) {\r\n            do {\r\n                l++\r\n            } while (arr[l] <= pivot)\r\n            do {\r\n                r--\r\n            } while (arr[r] > pivot)\r\n\r\n            if (l < r) {\r\n                let temp = arr[l]\r\n                arr[l] = arr[r]\r\n                arr[r] = temp\r\n            }\r\n        }\r\n        let temp = arr[low]\r\n        arr[low] = arr[r]\r\n        arr[r] = temp\r\n\r\n        return r\r\n    }\r\n\r\n    const quickSort = async (arr, l, h) => {\r\n        if (l < h) {\r\n            let r = await partition(arr, l, h)\r\n            console.log(r)\r\n            await quickSort(arr, l, r - 1)\r\n            await quickSort(arr, r + 1, h)\r\n        }\r\n\r\n        setList([...arr])\r\n    }\r\n\r\n    const randomize = () => {\r\n        setList(generateList(listSize))\r\n        setIsSorted(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                sort={() => quickSort(list, 0, list.length - 1)}\r\n                canRandomize={canRandomize}\r\n                isSorted={isSorted}\r\n                randomize={randomize}\r\n                setListSize={setListSize}\r\n            />\r\n            <SortList list={list} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuickSort\r\n\r\n","import React, { useEffect, useContext } from 'react'\r\nimport SortList from './SortList.js'\r\nimport ListContext from './ListContext'\r\nimport { generateList } from './helpers.js'\r\n\r\nconst Home = () => {\r\n    const { listProperties, setList } = useContext(ListContext)\r\n\r\n    useEffect(() => {\r\n        if(listProperties.list.length === 0){\r\n            setList({\r\n                list: generateList(listProperties.size),\r\n                size: 25,\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h2>\r\n                Let's explore how to sort this array of integers. Choose one of the Sorting Algorithms above!\r\n            </h2>\r\n            <SortList list={listProperties.list} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\n\nimport NavBar from './components/NavBar'\nimport './App.css'\n\nimport InsertionSort from './components/InsertionSort.js'\nimport BubbleSort from './components/BubbleSort.js'\nimport SelectionSort from './components/SelectionSort'\nimport MergeSort from './components/MergeSort'\nimport QuickSort from './components/QuickSort'\nimport ListContext from './components/ListContext'\nimport Home from './components/Home'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n    const [listProperties, setList] = useState({\n        list: [],\n        size: 25,\n    })\n    return (\n        <div className=\"App\">\n            <Router>\n                <NavBar />\n                <ListContext.Provider value={{ listProperties, setList }}>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={() => <Home />}\n                        />\n                        <Route\n                            exact\n                            path=\"/insertion\"\n                            render={() => <InsertionSort />}\n                        />\n                        <Route\n                            exact\n                            path=\"/bubble\"\n                            render={() => <BubbleSort />}\n                        />\n                        <Route\n                            exact\n                            path=\"/selection\"\n                            render={() => <SelectionSort />}\n                        />\n                        <Route\n                            exact\n                            path=\"/merge\"\n                            render={() => <MergeSort />}\n                        />\n                        <Route\n                            exact\n                            path=\"/quick\"\n                            render={() => <QuickSort />}\n                        />\n                    </Switch>\n                </ListContext.Provider>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}